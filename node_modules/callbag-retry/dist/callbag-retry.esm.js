function retry(max) {
  if (max === void 0) {
    max = -1;
  }

  return function (source) {
    return function (start, sink) {
      if (start !== 0) return;
      var inited = false;
      var retries = max;
      var sourceTalkback;

      var talkback = function talkback(type, data) {
        sourceTalkback(type, data);
      };

      var subscribe = function subscribe() {
        source(0, function (type, data) {
          if (type === 0) {
            sourceTalkback = data;

            if (inited) {
              // this pull probably shouldn't be unconditional
              // but I'm not sure how to track if we should pull or not at the moment
              talkback(1);
              return;
            }

            inited = true;
            sink(0, talkback);
            return;
          }

          if (type === 2 && data) {
            if (retries !== 0) {
              retries--;
              subscribe();
              return;
            }
          }

          sink(type, data);
        });
      };

      subscribe();
    };
  };
}

export default retry;
